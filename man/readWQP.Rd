% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readWQP.r
\name{readWQP}
\alias{readWQP}
\title{Read EPA Water Quality Portal Data}
\usage{
readWQP(type = "result", ..., print = TRUE)
}
\arguments{
\item{type}{Data type to read. One of "result", "narrowresult", "sites", "activity", or "detquantlim".}

\item{...}{additional arguments to be passed to WQP query path. See https://www.waterqualitydata.us/portal/ for optional arguments.}

\item{print}{Logical. Print summary table of sites & characteristics (only for result or narrowresult types).}

\item{startDateHi}{Query start date in 'mm-dd-yyyy' format.}

\item{startDateLo}{Query end date in 'mm-dd-yyyy' format.}
}
\value{
A data frame of WQP data
}
\description{
This function extracts water quality data from EPA's Water Quality Portal based on user arguemnt inputs. Note that connections to the WQP occassionally time out during download. This function tries to download requested files up to 10 times before exiting.
All arguments except type are optional, but at least one should be provided to limit download size and prevent errors connecting to WQP.
Note that some, but not all, special characters in characteristic names have been accounted if. If in doubt, use the WQP web interface to determine the appropriate sytax for odd characteristic names.
}
\examples{
# Read some data from Mantua Reservoir (2016-2018)
nr=readWQP(type="narrowresult", siteid=c("UTAHDWQ_WQX-4900440","UTAHDWQ_WQX-4900470"), startDateLo="01-01-2016", startDateHi="12-31-2018")

# Read just Arsenic, Cadmium, and DO, all dates
nr=readWQP(type="narrowresult", siteid=c("UTAHDWQ_WQX-4900440","UTAHDWQ_WQX-4900470"), characteristicName=c("Arsenic","Cadmium","Dissolved oxygen (DO)"))

# Read all Total dissolved solids statewide (2016-2018) (& note statecode for Utah)
tds_sw=readWQP(type="result", statecode="US:49", characteristicName="Total dissolved solids", startDateLo="01-01-2016", startDateHi="12-31-2018", print=F)

# Read sites in Utah
sites=readWQP(type="sites", statecode="US:49")
plot(LatitudeMeasure~LongitudeMeasure, sites[sites$LatitudeMeasure>0 & sites$LongitudeMeasure<0,])
}
